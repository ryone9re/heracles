apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: minio-main
  namespace: minio-operator
spec:
  image: minio/minio:RELEASE.2023-11-20T22-40-07Z
  imagePullPolicy: IfNotPresent
  
  credsSecret:
    name: minio-creds-secret
  
  pools:
    - servers: 2
      name: pool-0
      volumesPerServer: 2
      volumeClaimTemplate:
        apiVersion: v1
        kind: persistentvolumeclaims
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
      
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 512Mi
      
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
      
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: false
  
  mountPath: /export
  subPath: /data
  
  requestAutoCert: false
  
  s3:
    bucketDNS: false
  
  podManagementPolicy: Parallel
  
  liveness:
    httpGet:
      path: /minio/health/live
      port: 9000
      scheme: HTTP
    initialDelaySeconds: 120
    periodSeconds: 15
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  
  readiness:
    httpGet:
      path: /minio/health/ready
      port: 9000
      scheme: HTTP
    initialDelaySeconds: 120
    periodSeconds: 15
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  
  exposeServices:
    minio: true
    console: true
  
  serviceMetadata:
    minioServiceLabels:
      label: minio-svc
    minioServiceAnnotations:
      v2.min.io: minio-svc
    consoleServiceLabels:
      label: console-svc
    consoleServiceAnnotations:
      v2.min.io: console-svc
  
  console:
    image: minio/console:v0.22.5
    imagePullPolicy: IfNotPresent
    replicas: 1
    
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 100m
        memory: 128Mi
    
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      fsGroup: 1000
    
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: false
  
  prometheusOperator: true
  
  logging:
    anonymous: true
    json: true
    quiet: true
  
  serviceAccountName: minio-main-sa
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-creds-secret
  namespace: minio-operator
type: Opaque
data:
  accesskey: bWluaW9hZG1pbg==    # minioadmin in base64
  secretkey: bWluaW9hZG1pbjEyMzQ1  # minioadmin12345 in base64
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-main-sa
  namespace: minio-operator
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-main-ingress
  namespace: minio-operator
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  ingressClassName: nginx
  tls:
    - secretName: minio-main-tls
      hosts:
        - minio.ryone.dev
  rules:
    - host: minio.ryone.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio
                port:
                  number: 80