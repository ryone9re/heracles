apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vault-github-auth
  namespace: vault
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-cluster-backend
    kind: ClusterSecretStore
  target:
    name: vault-github-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        client-id: "{{ .clientId }}"
        client-secret: "{{ .clientSecret }}"
  data:
    - secretKey: clientId
      remoteRef:
        key: github/oauth-app
        property: client-id
    - secretKey: clientSecret
      remoteRef:
        key: github/oauth-app
        property: client-secret
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-github-config
  namespace: vault
data:
  github-config.hcl: |
    auth "github" {
      type = "github"
      description = "GitHub OAuth authentication"
      
      config = {
        organization = "ryone9re"
        base_url = "https://api.github.com"
      }
    }
    
    policy "admin" {
      path "*" {
        capabilities = ["create", "read", "update", "delete", "list", "sudo"]
      }
    }
    
    policy "developer" {
      path "secret/data/external-api/*" {
        capabilities = ["read"]
      }
      path "secret/data/postgres/development" {
        capabilities = ["read", "update"]
      }
      path "secret/data/postgres/staging" {
        capabilities = ["read"]
      }
    }
    
    policy "ops" {
      path "secret/*" {
        capabilities = ["create", "read", "update", "delete", "list"]
      }
      path "auth/*" {
        capabilities = ["create", "read", "update", "delete", "list"]
      }
      path "sys/policies/*" {
        capabilities = ["create", "read", "update", "delete", "list"]
      }
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-github-setup
  namespace: vault
spec:
  template:
    spec:
      serviceAccountName: vault
      containers:
      - name: vault-config
        image: vault:1.15.2
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-unseal-keys
              key: root-token
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: vault-github-secret
              key: client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: vault-github-secret
              key: client-secret
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status; do
            echo "Waiting for Vault..."
            sleep 5
          done
          
          # Enable GitHub auth method
          vault auth enable -path=github github || true
          
          # Configure GitHub auth
          vault write auth/github/config \
            organization=ryone9re \
            client_id="$GITHUB_CLIENT_ID" \
            client_secret="$GITHUB_CLIENT_SECRET"
          
          # Create policies
          vault policy write admin - <<EOF
          path "*" {
            capabilities = ["create", "read", "update", "delete", "list", "sudo"]
          }
          EOF
          
          vault policy write ops - <<EOF
          path "secret/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
          path "auth/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
          path "sys/policies/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
          EOF
          
          vault policy write developer - <<EOF
          path "secret/data/external-api/*" {
            capabilities = ["read"]
          }
          path "secret/data/postgres/development" {
            capabilities = ["read", "update"]
          }
          path "secret/data/postgres/staging" {
            capabilities = ["read"]
          }
          EOF
          
          # Map GitHub teams to policies
          vault write auth/github/map/teams/admins value=admin
          vault write auth/github/map/teams/ops value=ops
          vault write auth/github/map/teams/developers value=developer
          
          # Map individual users (fallback)
          vault write auth/github/map/users/ryone9re value=admin
          
          echo "GitHub authentication configured successfully!"
      restartPolicy: OnFailure
